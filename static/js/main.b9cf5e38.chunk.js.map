{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["createData","name","calories","fat","carbs","protein","rows","useStyles","makeStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","textAlign","table","Boolean","window","location","hostname","match","ReactDOM","render","myVar","classes","React","useState","input","setInput","input2","setInput2","openTimer","setOpenTimer","startTimer","data","setData","useEffect","mounted","a","async","axios","response","loadData","times","myTimer","t","document","getElementById","innerHTML","toFixed","style","width","alignContent","alignSelf","marginLeft","marginRight","Input","placeholder","onInput","e","console","log","target","value","fullWidth","Button","onClick","isNewData","map","item","idx","obj","alert","d","push","processName","cycleList","processList","color","variant","visibility","length","setInterval","clearInterval","id","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","index","key","scope","createElement","href","encodeURIComponent","JSON","stringify","download","click","then","catch","error","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9cf5e38.chunk.js","sourcesContent":["import React, { View, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { Input } from \"@material-ui/core\";\n\nimport * as axios from \"axios\";\n\nconst MAX_CYCLE = 5;\n// var data = null;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"1\", \"\"),\n  createData(\"2\", \"\"),\n  createData(\"3\", \"\"),\n  createData(\"4\", \"\"),\n  createData(\"5\", \"\")\n];\n\nvar operation1 = [\"o1\", \"o2\"];\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: \"block\",\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 100,\n    textAlign: \"center\"\n  },\n  table: {\n    minWidth: 650\n  }\n}));\n\nexport default function ControlledOpenSelect() {\n  const classes = useStyles();\n\n  const [input, setInput] = React.useState(\"\");\n  const [input2, setInput2] = React.useState(\"\");\n\n  const [item, setItem] = React.useState(\"\");\n  const [operation, setOperation] = React.useState(\"\");\n\n  const [openItem, setOpenItem] = React.useState(false);\n  const [openOperation, setOpenOperation] = React.useState(false);\n\n  const [openTimer, setOpenTimer] = React.useState(\"hidden\");\n  var myVar;\n  var startTimer = false;\n\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const loadData = async () => {\n      const response = await axios(\"./structure.json\");\n\n      if (mounted) {\n        setData(response.data);\n      }\n    };\n\n    loadData();\n\n    return () => {\n      mounted = false;\n    };\n\n    // fetch(\"./structure.json\")\n    // .then(response => {\n    //   // console.log(response[2]);\n    //   // data = response[2];\n    //   // setData(response[2]);\n    //   return response.json();\n    // })\n    // .then(d => {\n    //   // Work with JSON data here\n    //   data = d;\n    //   setData(d);\n    //   console.log(data);\n    // })\n    // .catch(err => {\n    //   // Do something for an error here\n    //   console.log(\"Error Reading data \" + err);\n    // });\n  }, []);\n\n  var times = [];\n\n  const handleItemChange = event => {\n    // setItem(event.target.value);\n    setItem(event.target.value);\n  };\n\n  const handleOperationChange = event => {\n    setOperation(event.target.value);\n\n    if (item != \"\" && event.target.value != \"\") {\n      setOpenTimer(\"visible\");\n    }\n  };\n\n  const handleItemClose = () => {\n    setOpenItem(false);\n  };\n\n  const handleOperationClose = () => {\n    setOpenOperation(false);\n  };\n\n  const handleItemOpen = () => {\n    setOpenItem(true);\n  };\n\n  const handleOperationOpen = () => {\n    setOpenOperation(true);\n  };\n\n  const showBtn = () => {\n    setOpenTimer(\"visible\");\n  };\n\n  const timerOnClick = () => {\n    if (times.length >= MAX_CYCLE) {\n      return 0; // do nothing\n    }\n\n    if (startTimer == false) {\n      // start timer\n      startTimer = true;\n      document.getElementById(\"timerLabel\").innerHTML = \"Stop\";\n      myVar = setInterval(myTimer, 0.01);\n    } else {\n      // stop timer\n      startTimer = false;\n      clearInterval(myVar);\n      let t = document.getElementById(\"demo\").innerHTML;\n      times.push(t);\n\n      //\n      var isNewData = true;\n      data.map((item, idx) => {\n        if (item.name == input) {\n          console.log(item);\n          for (var obj in item[\"processList\"]) {\n            if (item[\"processList\"][obj][\"processName\"] == input2) {\n              isNewData = false;\n              let d = data;\n              d[idx][\"processList\"][obj] = {\n                \"processName\": d[idx][\"processList\"][obj][\"processName\"],\n                \"cycleList\": times\n              }\n              setData(d);\n            }\n          }\n\n          // console.log(isNewData, input, input2);\n          // if (isNewData && input != \"\" && input2 != \"\") {\n          //   let d = data;\n          //   d[idx][\"processList\"].push({\n          //     processName: input2,\n          //     cycleList: times\n          //   });\n          //   setData(d);\n          //   console.log(\"d: \", d);\n          //   setOpenTimer(\"visible\");\n          // } else {\n          //   setOpenTimer(\"hidden\");\n          // }\n\n          // item[\"processList\"].map(process => {\n          //   if (process[\"processName\"] == input2) {\n\n          //   } else {\n          //     // add process\n          //     console.log('assas');\n          //   }\n          // });\n        } else {\n          data.push({\n            name: input,\n            processList: []\n          });\n          setData(data);\n        }\n\n        console.log(\"data 1212\");\n      });\n\n      //\n\n      document.getElementById(\"time_\" + (times.length - 1)).innerHTML = t;\n\n      document.getElementById(\"demo\").innerHTML = 0;\n      document.getElementById(\"timerLabel\").innerHTML = \"Start\";\n\n      console.log(times);\n    }\n  };\n\n  const myTimer = () => {\n    var t = document.getElementById(\"demo\").innerHTML - 0;\n    document.getElementById(\"demo\").innerHTML = (t + 0.01).toFixed(2);\n  };\n\n  var itemList = [\n    {\n      id: 0,\n      name: \"Shoes 1\"\n    },\n    {\n      id: 1,\n      name: \"Shoes 2\"\n    }\n  ];\n\n  var operationList = [\n    {\n      item_id: 0,\n      name: [\n        { id: 0, task: \"chuẩn bị + phối đồ\" },\n        { id: 1, task: \"ép góc nóng lạnh + ép mũi\" }\n      ]\n    }\n  ];\n\n  const addItem = e => {\n    console.log(e.target.value);\n    // let input = e.target.value;\n    setInput(e.target.value);\n  };\n\n  const addOperation = e => {\n    console.log(e.target.value);\n    // let input = e.target.value;\n    setInput2(e.target.value);\n  };\n\n  const addFunc = () => {\n    console.log(\"item\");\n    var isNewData = true;\n\n    data.map((item, idx) => {\n      if (item.name == input) {\n        console.log(item);\n\n        for (var obj in item[\"processList\"]) {\n          console.log(obj);\n          console.log(\"input2: \", input2);\n          if (item[\"processList\"][obj][\"processName\"] == input2) {\n            console.log(\"asas\");\n            // alert(\"Duplicate Item and Process\");\n            isNewData = false;\n            setOpenTimer(\"hidden\");\n            alert(\"Duplicate Item and Process\");\n            return;\n          }\n        }\n\n        console.log(isNewData, input, input2);\n        if (isNewData && input != \"\" && input2 != \"\") {\n          let d = data;\n          d[idx][\"processList\"].push({\n            processName: input2,\n            cycleList: times\n          });\n          setData(d);\n          console.log(\"d: \", d);\n          setOpenTimer(\"visible\");\n        } else {\n          setOpenTimer(\"hidden\");\n        }\n\n        // item[\"processList\"].map(process => {\n        //   if (process[\"processName\"] == input2) {\n\n        //   } else {\n        //     // add process\n        //     console.log('assas');\n        //   }\n        // });\n      } else {\n        data.push({\n          name: input,\n          processList: []\n        });\n        setData(data);\n      }\n\n      console.log(\"data 1212\");\n    });\n  };\n\n  const saveFile = () => {\n    let a = document.createElement(\"a\");\n    a.href =\n      \"data:application/octet-stream,\" +\n      encodeURIComponent(JSON.stringify(data));\n    a.download = \"myFile.json\";\n    a.click(); // we not add 'a' to DOM so no need to remove\n\n    axios\n      .get(\"www.google.com\")\n      .then(function(response) {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div\n      style={{\n        width: \"650px\",\n        textAlign: \"center\",\n        alignContent: \"center\",\n        alignSelf: \"center\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      }}\n    >\n      <Input\n        placeholder=\"please input item\"\n        onInput={addItem}\n        style={{ width: \"200px\", fullWidth: true }}\n      ></Input>\n\n      <br />\n      <Input\n        placeholder=\"please input operation\"\n        onInput={addOperation}\n        style={{ width: \"200px\", fullWidth: true }}\n      ></Input>\n      <br />\n      <br />\n      <Button\n        onClick={addFunc}\n        color=\"primary\"\n        variant=\"contained\"\n        style={{ width: \"200px\" }}\n      >\n        Add\n      </Button>\n\n      <br />\n      <br />\n      {/* openTimer css plss*/}\n      <div style={{ visibility: openTimer }}>\n        <Button\n          onClick={timerOnClick}\n          id=\"timerLabel\"\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ width: \"200px\" }}\n        >\n          Start\n        </Button>\n\n        <p id=\"demo\"></p>\n\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Cycle</TableCell>\n                <TableCell align=\"center\">Time</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row, index) => (\n                <TableRow key={row.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"center\" id={\"time_\" + index}></TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <br />\n        <Button\n          onClick={saveFile}\n          color=\"secondary\"\n          variant=\"contained\"\n          style={{ width: \"200px\" }}\n        >\n          Update\n        </Button>\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}